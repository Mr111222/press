/**
 * 生成element组件及全量组件
 * by liushuai
 */
const ejs = require('ejs')
const fs = require('fs')
const path = require('path')
const name2cb = str => `Cb${str.split('-').reduce((str, cur) => (str += cur[0].toUpperCase() + cur.substr(1), str), '')}`
const allComponents = require('../components.json')
// 手动配置
const elPlugins = ['loading', 'message-box', 'notification', 'message']
const cbPlugins = []

let epNames = elPlugins.map(name => name2cb(name))
let cpNames = cbPlugins.map(name => name2cb(name))
let elComponents = Object.keys(allComponents).filter(key => (!elPlugins.includes(key) && !allComponents[key].isCb))
let elNames = elComponents.map(name => name2cb(name))
let cbComponents = Object.keys(allComponents).filter(key => (!cbPlugins.includes(key) && allComponents[key].isCb))
let cbNames = cbComponents.map(name => name2cb(name))
// 全量
let tpl = fs.readFileSync(path.join(__dirname, 'template.tpl'), {encoding: 'utf8'})
let content = ejs.render(tpl, {el: [elNames, elComponents], cb: [cbNames, cbComponents], elPlugins: [epNames, elPlugins], cbPlugins: [cpNames, cbPlugins]})
fs.writeFileSync(path.join(__dirname, './index.js'), content)
// 组件
let cTpl = fs.readFileSync(path.join(__dirname, 'template-component.tpl'), {encoding: 'utf8'})
elComponents.forEach((key, index) => {
  let content = ejs.render(cTpl, {name: [elNames[index], key], isPlugin: false})
  fs.writeFile(path.join(__dirname, `./${key}.js`), content, () => {})
})
elPlugins.forEach((key, index) => {
  let content = ejs.render(cTpl, {name: [epNames[index], key], isPlugin: true})
  fs.writeFile(path.join(__dirname, `./${key}.js`), content, () => {})

})